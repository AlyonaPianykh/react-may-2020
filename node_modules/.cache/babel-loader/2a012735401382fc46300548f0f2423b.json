{"ast":null,"code":"var _jsxFileName = \"/Users/volodymyr/Desktop/react-may-2020/src/components/post-card/PostCard.js\";\nimport React from 'react';\nimport DefaultImg from '../../assets/default-empty-img.png';\nimport './PostCard.scss';\nimport { Comment } from \"../comment/Comment\";\nexport function PostCard(props) {\n  console.log(props); // todo: достать пропсу comments из props ниже в 9й строке\n\n  const {\n    post,\n    hasImage,\n    comments,\n    author\n  } = props;\n  console.log('hasImage', hasImage);\n  const {\n    title,\n    body\n  } = post;\n  const kittyUrl = `https://cataas.com/cat/says/hello%20world!?${Math.random() * 1000}`;\n\n  const renderImage = () => {\n    return hasImage ? /*#__PURE__*/React.createElement(\"img\", {\n      src: kittyUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: DefaultImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"may-post-card card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, hasImage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"may-post-card-img\",\n    id: \"my-block\",\n    onClick: () => {\n      alert('ghvcdhfvbdfsjvbdf');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: kittyUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), !hasImage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"may-post-card-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: DefaultImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"card-title title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-text body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, body)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, comments.map(comment => {\n    return /*#__PURE__*/React.createElement(Comment, {\n      key: comment.id,\n      comment: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    });\n  })));\n}\nexport default PostCard;","map":{"version":3,"sources":["/Users/volodymyr/Desktop/react-may-2020/src/components/post-card/PostCard.js"],"names":["React","DefaultImg","Comment","PostCard","props","console","log","post","hasImage","comments","author","title","body","kittyUrl","Math","random","renderImage","alert","map","comment","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAO,iBAAP;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAD4B,CAE5B;;AACA,QAAM;AAACG,IAAAA,IAAD;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA;AAA3B,MAAqCN,KAA3C;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,QAAxB;AACA,QAAM;AAACG,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAgBL,IAAtB;AAEA,QAAMM,QAAQ,GAAI,8CAA6CC,IAAI,CAACC,MAAL,KAAgB,IAAK,EAApF;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtB,WAAOR,QAAQ,gBACX;AAAK,MAAA,GAAG,EAAEK,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,gBAGX;AAAK,MAAA,GAAG,EAAEZ,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAKH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBKO,QAAQ,iBACL;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,EAAE,EAAC,UAAtC;AAAiD,IAAA,OAAO,EAAE,MAAM;AAC5DS,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAK,IAAA,GAAG,EAAEJ,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAnBR,EA0BK,CAACL,QAAD,iBACG;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEP,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA3BR,eAgCI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCU,KAAlC,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IADL,CAFJ,CAhCJ,eAgDE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGUH,QAAQ,CAACS,GAAT,CAAcC,OAAD,IAAa;AAC1B,wBACA,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAtB;AAA0B,MAAA,OAAO,EAAED,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAGH,GAJG,CAHV,CAhDF,CADJ;AA8DH;AAED,eAAehB,QAAf","sourcesContent":["import React from 'react';\n\nimport DefaultImg from '../../assets/default-empty-img.png';\nimport './PostCard.scss';\nimport {Comment} from \"../comment/Comment\";\n\nexport function PostCard(props) {\n    console.log(props);\n    // todo: достать пропсу comments из props ниже в 9й строке\n    const {post, hasImage, comments, author} = props;\n\n    console.log('hasImage', hasImage);\n    const {title, body} = post;\n\n    const kittyUrl = `https://cataas.com/cat/says/hello%20world!?${Math.random() * 1000}`;\n\n    const renderImage = () => {\n        return hasImage ? (\n            <img src={kittyUrl}/>\n        ) : (\n            <img src={DefaultImg}/>\n        );\n    };\n\n    return (\n        <div className=\"may-post-card card\">\n\n            {/*<div className=\"may-post-card-img\">*/}\n            {/*  {*/}\n            {/*    hasImage ? (*/}\n            {/*      <img src={kittyUrl} />*/}\n            {/*      ) : (*/}\n            {/*        <img src={DefaultImg} />*/}\n            {/*    )*/}\n            {/*  }*/}\n            {/*</div>*/}\n\n            {/*<div className=\"may-post-card-img\" >*/}\n            {/*  {*/}\n            {/*    renderImage()*/}\n            {/*  }*/}\n            {/*</div>*/}\n\n            {hasImage && (\n                <div className=\"may-post-card-img\" id=\"my-block\" onClick={() => {\n                    alert('ghvcdhfvbdfsjvbdf')\n                }}>\n                    <img src={kittyUrl}/>\n                </div>\n            )\n            }\n            {!hasImage && (\n                <div className=\"may-post-card-img\">\n                    <img src={DefaultImg}/>\n                </div>\n            )}\n\n            <div className=\"card-body\">\n                <h4 className=\"card-title title\">{title}</h4>\n                <div className=\"card-text body\">\n                    {body}\n                </div>\n                {/*<footer className=\"blockquote-footer\">{ author }</footer>*/}\n            </div>\n\n            {/*  todo: здесь нужно показать массив коментариев к посту (comments), который прилетит в props\n          можно создать отдельную компоненту Comment по аналогии с тем, как мы делали PostCard, UserCard\n          как она будет выглядеть зависит от вашей фантазии\n          Для каждого комментария должны быть выведены такие поля:\n          name - имя автора комментария\n          email - почта автора комментария\n          body - текст комментария\n    */}\n          <div className=\"comments\">\n            {\n\n                    comments.map((comment) => {\n                    return (\n                    <Comment key={comment.id} comment={comment} />\n                    )\n                })\n\n            }\n          </div>\n        </div>\n    );\n}\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}