{"ast":null,"code":"var _jsxFileName = \"/home/viktor-oleh/Desktop/homeWork_extra/react-may-2020/src/components/app/App.js\";\nimport React from 'react';\nimport { Header } from '../header/HeaderFromLecture';\nimport { Footer } from '../footer/Footer';\nimport { PostCard as Card } from '../post-card/PostCard'; // todo: достать в строке 7 массив allComments из констант\n\nimport { postsList, allComments, usersList } from '../../constants'; // todo помимо константы postsList достать еще usersList\n// todo: тут сделать импорт  UserCard из components/user-card/UserCard\n\nimport { UserCard } from '../user-card/UserCard';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const renderList = () => {\n    const res = [];\n\n    for (let i = 0; i < 6; i++) {\n      const item = postsList[i];\n      res.push( /*#__PURE__*/React.createElement(Card, {\n        post: item,\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }\n      }));\n    }\n\n    return res;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"content will appear here soon\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex posts-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, postsList.map((item, index) => {\n    const odd = index % 2 !== 0;\n    const author = usersList.find(user => user.id === item.user_id);\n    console.log('====================================');\n    console.log(author);\n    console.log('===================================='); // todo: найти в массиве usersList пользователя, айди которого равно user_id в посте (т.е. в данном случае item)\n    //  для этого можно использовать функцию массива find или findIndex\n    //  передать имя и фамилию пользователя как пропсу author в Card\n    //  использовать для этого стринговый литерал ``\n    //  в Card под телом поста срендерить имя автора, используя blockquote-footer класс из бутстрапа\n    //  пример тут: https://hackerthemes.com/bootstrap-cheatsheet/#blockquote-footer\n    // todo: найти в массиве allComments комментарии, post_id которых = id поста  (т.е. в данном случае item.id)\n    //  для этого можно использовать метод массива filter\n    //  передать этот массив в Card как пропсу под названиес comments\n\n    return /*#__PURE__*/React.createElement(Card, {\n      post: item,\n      key: item.id,\n      hasImage: odd,\n      author: author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex posts-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/viktor-oleh/Desktop/homeWork_extra/react-may-2020/src/components/app/App.js"],"names":["React","Header","Footer","PostCard","Card","postsList","allComments","usersList","UserCard","App","renderList","res","i","item","push","id","map","index","odd","author","find","user","user_id","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAAUC,QAAQ,IAAIC,IAAtB,QAAkC,uBAAlC,C,CACA;;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,iBAAlD,C,CAAqE;AACrE;;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,OAAO,YAAP;AACA,OAAO,sCAAP;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAMC,UAAU,GAAG,MAAM;AACvB,UAAMC,GAAG,GAAG,EAAZ;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAMC,IAAI,GAAGR,SAAS,CAACO,CAAD,CAAtB;AACAD,MAAAA,GAAG,CAACG,IAAJ,eAAS,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAED,IAAZ;AAAkB,QAAA,GAAG,EAAEA,IAAI,CAACE,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACD;;AAED,WAAOJ,GAAP;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF,eAUE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIN,SAAS,CAACW,GAAV,CAAc,CAACH,IAAD,EAAOI,KAAP,KAAiB;AAC7B,UAAMC,GAAG,GAAGD,KAAK,GAAG,CAAR,KAAc,CAA1B;AACA,UAAME,MAAM,GAAGZ,SAAS,CAACa,IAAV,CAAgBC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYF,IAAI,CAACS,OAAzC,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAL6B,CAM7B;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAEE,wBAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEX,IAAZ;AAAkB,MAAA,GAAG,EAAEA,IAAI,CAACE,EAA5B;AAAgC,MAAA,QAAQ,EAAEG,GAA1C;AAA+C,MAAA,MAAM,EAAEC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAnBD,CAFJ,CAVF,eAmCE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,eAwCE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCF,CADF;AA4CD;;AAED,eAAeV,GAAf","sourcesContent":["import React from 'react';\n\nimport { Header } from '../header/HeaderFromLecture';\nimport { Footer } from '../footer/Footer';\nimport  { PostCard as Card } from '../post-card/PostCard';\n// todo: достать в строке 7 массив allComments из констант\nimport { postsList, allComments, usersList } from '../../constants'; // todo помимо константы postsList достать еще usersList\n// todo: тут сделать импорт  UserCard из components/user-card/UserCard\nimport { UserCard } from '../user-card/UserCard';\n\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n\n  const renderList = () => {\n    const res = [];\n\n    for (let i = 0; i < 6; i++) {\n      const item = postsList[i];\n      res.push(<Card post={item} key={item.id}/>)\n    }\n\n    return res;\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div>content will appear here soon</div>\n\n      {/*<div className=\"d-flex posts-container\">*/}\n      {/*  {*/}\n      {/*    renderList()*/}\n      {/*  }*/}\n      {/*</div>*/}\n\n      <div className=\"d-flex posts-container\">\n        {\n          postsList.map((item, index) => {\n            const odd = index % 2 !== 0;\n            const author = usersList.find( user => user.id === item.user_id);\n            console.log('====================================');\n            console.log(author);\n            console.log('====================================');\n            // todo: найти в массиве usersList пользователя, айди которого равно user_id в посте (т.е. в данном случае item)\n            //  для этого можно использовать функцию массива find или findIndex\n            //  передать имя и фамилию пользователя как пропсу author в Card\n            //  использовать для этого стринговый литерал ``\n            //  в Card под телом поста срендерить имя автора, используя blockquote-footer класс из бутстрапа\n            //  пример тут: https://hackerthemes.com/bootstrap-cheatsheet/#blockquote-footer\n\n\n            // todo: найти в массиве allComments комментарии, post_id которых = id поста  (т.е. в данном случае item.id)\n            //  для этого можно использовать метод массива filter\n            //  передать этот массив в Card как пропсу под названиес comments\n\n              return <Card post={item} key={item.id} hasImage={odd} author={author} />\n          })\n        }\n      </div>\n\n      <div className=\"d-flex posts-container\">\n      {/*  todo: срендерить тут список пользователей, используя компонент UserCard */}\n\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}